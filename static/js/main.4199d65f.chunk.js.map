{"version":3,"sources":["static/quotes sync /^/.//lang_.*/.json$","static/words sync /^/.//.*/.json$","serviceWorker.ts","constants.js","actions/actions.js","components/Buttons.jsx","components/Settings.jsx","components/StatsBar.jsx","components/Typing.jsx","components/TextInfo.jsx","components/App.jsx","reducers/text.js","reducers/typing.js","reducers/index.js","store.js","index.jsx"],"names":["map","./lang_ar.json","./lang_bg.json","./lang_ca.json","./lang_cs.json","./lang_da.json","./lang_de.json","./lang_el.json","./lang_en.json","./lang_es.json","./lang_et.json","./lang_fa.json","./lang_fi.json","./lang_fr.json","./lang_he.json","./lang_hi.json","./lang_hr.json","./lang_hu.json","./lang_id.json","./lang_it.json","./lang_ja.json","./lang_ko.json","./lang_lv.json","./lang_ms.json","./lang_nl.json","./lang_no.json","./lang_pl.json","./lang_pt.json","./lang_ro.json","./lang_ru.json","./lang_sk.json","./lang_sl.json","./lang_sr.json","./lang_sv.json","./lang_sw.json","./lang_th.json","./lang_tl.json","./lang_tr.json","./lang_uk.json","./lang_vi.json","./lang_zh.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","./de.json","./en.json","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","CHARACTER_SETS","en","de","SYMBOLS","split","NUMBERS","EXCLUSION_KEYWORDS","MODE","QUOTE","WIKI","KAFKA","RANDOM","WORDS","SETTINGS","CUSTOM","getRandomWikiArticle","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","lang","wikiLang","wikiURL","wiki","firstKey","_wiki$data$query$page","extract","title","wikiArticle","wrap","_context","prev","next","defaultTo","localStorage","getItem","sample","axios","get","sent","data","query","pages","replace","some","includes","abrupt","stop","this","apply","arguments","newText","mode","words","_ref2","_callee2","dispatch","_ref3","wikiSentences","combine","_context2","type","payload","x","raw","filter","comments","text","flatten","chunk","length","author","t0","_x","changeTextPosition","textPosition","action","changeCharsTyped","charsTyped","Buttons","input","customMode","showInput","handleChange","event","_this","setState","target","value","handleSubmit","setItem","refs","shuffle","checked","props","preventDefault","_this2","react","style","fontSize","onClick","toLowerCase","_this3","_this$state","renderModeButton","display","onSubmit","rows","cols","onChange","defaultChecked","ref","name","htmlFor","React","connect","pos","Settings","for","width","defaultValue","Number","MAX_SAFE_INTEGER","href","StatsBar","chars","hundredths","wpm","errors","timer","history","startTimer","setInterval","tick","produce","draft","stopTimer","clearInterval","prevProps","prevState","_this$props","isFinite","undefined","sec","parseInt","toFixed","errorPercent","histArray","push","wpmspan","accuarcy","err","histLen","wpms","avgWpm","sum","avgErrors","show","color","histMode","borderTop","padding","typingData","textData","Typing","cursorPosition","errorPosition","errorSum","block","keydown","newItems","toConsumableArray","splice","join","setErrorPosition","cursorPos","errPos","ctrlKey","changeErrorPercent","_","key","setTimeout","handleDeletion","_this$state2","fontFamily","background","slice","backgroundColor","percent","TextInfo","context","App","ALL_KEYS","components_Buttons","minHeight","overflow","components_Settings","components_StatsBar","components_Typing","components_TextInfo","chance","Chance","splitter","recombine","newQuote","quotes","require","_$sample","combinedQuotes","initialState","combineReducers","wordList","uniqWordSample","weighted","Array","concat","newWords","quote","newKafka","playload","newWiki","newSymbols","newNumbers","textArr","isArray","chunkTextArray","pipe","i","newCustom","objectSpread","composerEnhancer","composeWithDevTools","realtime","trace","traceLimit","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","es","store","components_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4199d65f.chunk.js","sourcesContent":["var map = {\n\t\"./lang_ar.json\": 161,\n\t\"./lang_bg.json\": 162,\n\t\"./lang_ca.json\": 163,\n\t\"./lang_cs.json\": 164,\n\t\"./lang_da.json\": 165,\n\t\"./lang_de.json\": 166,\n\t\"./lang_el.json\": 167,\n\t\"./lang_en.json\": 168,\n\t\"./lang_es.json\": 169,\n\t\"./lang_et.json\": 170,\n\t\"./lang_fa.json\": 171,\n\t\"./lang_fi.json\": 172,\n\t\"./lang_fr.json\": 173,\n\t\"./lang_he.json\": 174,\n\t\"./lang_hi.json\": 175,\n\t\"./lang_hr.json\": 176,\n\t\"./lang_hu.json\": 177,\n\t\"./lang_id.json\": 178,\n\t\"./lang_it.json\": 179,\n\t\"./lang_ja.json\": 180,\n\t\"./lang_ko.json\": 181,\n\t\"./lang_lv.json\": 182,\n\t\"./lang_ms.json\": 183,\n\t\"./lang_nl.json\": 184,\n\t\"./lang_no.json\": 185,\n\t\"./lang_pl.json\": 186,\n\t\"./lang_pt.json\": 187,\n\t\"./lang_ro.json\": 188,\n\t\"./lang_ru.json\": 189,\n\t\"./lang_sk.json\": 190,\n\t\"./lang_sl.json\": 191,\n\t\"./lang_sr.json\": 192,\n\t\"./lang_sv.json\": 193,\n\t\"./lang_sw.json\": 194,\n\t\"./lang_th.json\": 195,\n\t\"./lang_tl.json\": 196,\n\t\"./lang_tr.json\": 197,\n\t\"./lang_uk.json\": 198,\n\t\"./lang_vi.json\": 199,\n\t\"./lang_zh.json\": 200\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 160;","var map = {\n\t\"./de.json\": 202,\n\t\"./en.json\": 203\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 201;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n        ),\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href,\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA',\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.',\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","export const CHARACTER_SETS = {\n    en: /[^a-zA-Z0-9,./<>?;:'\"[\\]\\\\|~!§@#$%^&*{}() +-=]/g,\n    de: /[^a-zA-Z0-9,./<>?;:'\"[\\]\\\\|~!§@#$%^&*{}() +-=ÜüÄäÖöß]/g,\n}\n\nexport const SYMBOLS = ',./<>?;:\\'\"[]\\\\{}|~!@#$%^&*()-_=+'.split('')\nexport const NUMBERS = '0123456789'.split('')\nexport const RANDOM_LENGTH = 20\n\nexport const NEW_TEXT = 'NEW_TEXT'\n\nexport const EXCLUSION_KEYWORDS = [\n    'bezeichnet:',\n    'steht für:',\n    'folgender Personen:',\n    'folgenden Personen:',\n    'verschiedener Personen:',\n    'folgender Orte:',\n    'verschiedener Orte:',\n    'Vorlage:Infobox',\n    'refer to:',\n    '(disambiguation)',\n]\n\nexport const MODE = {\n    QUOTE: 'QUOTE',\n    WIKI: 'WIKI',\n    KAFKA: 'KAFKA',\n    RANDOM: 'RANDOM',\n    SYMBOLS: 'SYMBOLS',\n    NUMBERS: 'NUMBERS',\n    WORDS: 'WORDS',\n    SETTINGS: 'SETTINGS',\n    CUSTOM: 'CUSTOM',\n}\n","import { action } from 'typesafe-actions'\nimport axios from 'axios'\nimport { chunk, flatten, defaultTo, sample } from 'lodash/fp'\nimport { split } from 'sentence-splitter'\nimport { MODE, EXCLUSION_KEYWORDS, NEW_TEXT } from '../constants'\n\nconst getRandomWikiArticle = async () => {\n    const lang = defaultTo('en')(localStorage.getItem('language'))\n    const wikiLang = lang === 'en' ? sample(['en', 'simple']) : lang\n    const wikiBaseURL = 'https://' + wikiLang + '.wikipedia.org/w/api.php'\n    const wikiURL =\n        wikiBaseURL +\n        '?format=json' +\n        '&action=query' +\n        '&generator=random' +\n        '&grnnamespace=0' +\n        '&prop=extracts' +\n        '&exlimit=max' +\n        '&explaintext&exintro' +\n        '&origin=*'\n\n    const wiki = await axios.get(wikiURL)\n\n    const firstKey = Object.keys(wiki.data.query.pages)[0]\n    const { extract, title } = wiki.data.query.pages[firstKey]\n\n    const wikiArticle = extract\n        .replace('  ', ' ')\n        .replace('–', '-')\n        .replace('—', '-')\n        .replace(/(?!\\w)\\.(?=\\w)/g, '. ')\n\n    // check if we have an acutal article or just a list of possible articles\n    if (\n        EXCLUSION_KEYWORDS.some(\n            e => wikiArticle.includes(e) || title.includes(e),\n        )\n    ) {\n        return await getRandomWikiArticle()\n    }\n\n    return { wikiArticle, title }\n}\n\nexport const newText = (mode, words) => {\n    return async dispatch => {\n        if (mode !== MODE.WIKI) {\n            dispatch({ type: NEW_TEXT, payload: { mode, words } })\n            return\n        }\n\n        try {\n            const { wikiArticle, title } = await getRandomWikiArticle()\n            const wikiSentences = split(wikiArticle)\n                .map(x => (x.type === 'Sentence' ? x.raw : null))\n                .filter(Boolean)\n            const combine = text =>\n                flatten(\n                    chunk(2, text).map(x =>\n                        x.length === 2 && x[0].length + x[1].length < 180\n                            ? [x[0] + ' ' + x[1]]\n                            : x,\n                    ),\n                )\n\n            dispatch({\n                type: 'NEW_TEXT',\n                payload: {\n                    mode,\n                    words,\n                    comments: combine(combine(combine(wikiSentences))),\n                    author: title,\n                },\n            })\n        } catch (error) {\n            console.log(error)\n            dispatch({ type: 'QUOTE_FAILED', payload: error })\n        }\n    }\n}\n\nexport const changeTextPosition = textPosition =>\n    action('CHANGE_TEXT_POSITION', { textPosition })\n\nexport const changeCharsTyped = charsTyped =>\n    action('CHANGE_CHARS_TYPED', { charsTyped })\n\nexport const changeErrorPercent = errorPercent =>\n    action('CHANGE_ERROR_PERCENT', { errorPercent })\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { newText, changeTextPosition } from '../actions/actions'\nimport { MODE } from '../constants'\nimport { defaultTo } from 'lodash/fp'\n\nclass Buttons extends React.Component {\n    state = {\n        input: '',\n        customMode: false,\n        showInput: true,\n    }\n\n    handleChange = event => {\n        this.setState({ input: event.target.value })\n    }\n\n    handleSubmit = event => {\n        localStorage.setItem('shuffle', this.refs.shuffle.checked)\n        this.props.newText(MODE.CUSTOM, this.state.input.split(' '))\n        this.props.changeTextPosition(0)\n        this.setState({ showInput: false })\n        event.preventDefault()\n    }\n\n    renderModeButton(mode) {\n        return (\n            <button\n                style={{ fontSize: '1.1em' }}\n                onClick={() => {\n                    this.setState({ customMode: false })\n                    this.props.newText(mode)\n                    this.props.changeTextPosition(0)\n                }}\n            >\n                {mode.toLowerCase()}\n            </button>\n        )\n    }\n\n    render() {\n        const { input, customMode } = this.state\n        return (\n            <div>\n                {this.renderModeButton(MODE.QUOTE)}\n                {this.renderModeButton(MODE.WIKI)}\n                {this.renderModeButton(MODE.WORDS)}\n                <button\n                    style={{ fontSize: '1.1em' }}\n                    onClick={() => {\n                        this.props.newText(MODE.CUSTOM, '')\n                        this.setState({\n                            customMode: true,\n                            showInput: true,\n                        })\n                     this.props.changeTextPosition(0)\n                    }}\n                >\n                    {MODE.CUSTOM.toLowerCase()}\n                </button>\n                {this.renderModeButton(MODE.SETTINGS)}\n                {customMode && this.state.showInput && (\n                    <div style={{ display: 'inline', fontSize: '1.1em' }}>\n                        <br />\n                        <form\n                            style={{ display: 'inline' }}\n                            onSubmit={this.handleSubmit}\n                        >\n                            <br />\n                            <textarea\n                                rows='20'\n                                cols='80'\n                                type='text'\n                                value={input}\n                                style={{\n                                    fontSize: '1.00em',\n                                    display: 'inline',\n                                }}\n                                onChange={this.handleChange}\n                            />{' '}\n                            <br />\n                            <input\n                                type='submit'\n                                value='submit'\n                                style={{\n                                    fontSize: '1.00em',\n                                    display: 'inline',\n                                }}\n                            />\n                            <input\n                                type='checkbox'\n                                defaultChecked={\n                                    defaultTo(\n                                        'false',\n                                        localStorage.getItem('shuffle'),\n                                    ) === 'true'\n                                }\n                                ref='shuffle'\n                                id='shuffle'\n                                name='shuffle'\n                            />\n                            <label htmlFor='shuffle'> shuffle words</label>\n                        </form>\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        newText: (mode, words) => {\n            dispatch(newText(mode, words))\n        },\n        changeTextPosition: pos => {\n            dispatch(changeTextPosition(pos))\n        },\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Buttons)\n","import * as React from 'react'\n\nclass Settings extends React.Component {\n    render() {\n        return (\n            <div>\n                <label\n                    for='lang'\n                    style={{ display: 'inline-block', width: 110 }}\n                >\n                    Language:{' '}\n                </label>\n                <select\n                    name='lang'\n                    id='lang'\n                    style={{ display: 'inline-block', width: 80 }}\n                    onChange={e =>\n                        localStorage.setItem('language', e.target.value)\n                    }\n                    defaultValue={localStorage.getItem('language')}\n                >\n                    <option value='en'>English</option>\n                    <option value='de'>German</option>\n                </select>\n                <br />\n                <label\n                    for='lang'\n                    style={{ display: 'inline-block', width: 110 }}\n                >\n                    Max. Errors:{' '}\n                </label>\n                <select\n                    name='lang'\n                    id='lang'\n                    style={{ display: 'inline-block', width: 80 }}\n                    onChange={e =>\n                        localStorage.setItem('maxError', e.target.value)\n                    }\n                    defaultValue={localStorage.getItem('maxError')}\n                >\n                    <option value={Number.MAX_SAFE_INTEGER}>unlimited</option>\n                    <option value={0}>0</option>\n                    <option value={1}>1</option>\n                    <option value={2}>2</option>\n                    <option value={3}>3</option>\n                    <option value={4}>4</option>\n                    <option value={5}>5</option>\n                    <option value={6}>6</option>\n                    <option value={7}>7</option>\n                    <option value={8}>8</option>\n                    <option value={9}>9</option>\n                </select>\n                <br /> <br />\n                If you have any questions, suggestions or want to find out\n                <br />\n                more about this project visit the project website on{' '}\n                <a href='https://github.com/madnight/keebacy#faq'>GitHub</a>.\n            </div>\n        )\n    }\n}\n\nexport default Settings\n","import produce from 'immer'\nimport * as React from 'react'\nimport { connect } from 'react-redux'\nimport { sum, map, defaultTo } from 'lodash/fp'\n\nclass StatsBar extends React.Component {\n    state = {\n        chars: this.props.chars,\n        hundredths: 0,\n        wpm: 0,\n        errors: '100',\n        timer: null,\n        history: [],\n    }\n\n    startTimer = () => {\n        this.setState({\n            hundredths: 0,\n            timer: setInterval(this.tick, 10),\n        })\n    }\n\n    tick = () => {\n        this.setState(\n            produce(this.state, draft => {\n                draft.hundredths += 1\n            }),\n        )\n    }\n\n    stopTimer = () => {\n        clearInterval(this.state.timer)\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props === prevProps) {\n            return\n        }\n        const { chars, pos, text } = this.props\n\n        if (\n            Number.isFinite(prevProps.pos) &&\n            prevProps.text[prevProps.pos] !== undefined &&\n            // previously have reached the end of the text\n            prevProps.chars === prevProps.text[prevProps.pos].length - 1 &&\n            // and we are at the beginning of a\n            chars === 0 &&\n            // new text\n            prevProps.text[prevProps.pos] !== text[pos]\n        ) {\n            const { hundredths } = this.state\n            const sec = hundredths / 100\n            const wpm = parseInt(\n                (sec === 0 ? 0 : prevProps.chars / 5 / (sec / 60)).toFixed(0),\n            )\n            const { errorPercent } = this.props\n\n            let histArray = this.state.history\n            histArray.push({ wpm: wpm, errors: 100 - errorPercent })\n\n            this.setState({\n                chars: prevProps.chars,\n                wpm: wpm,\n                errors: (100 - errorPercent).toFixed(1).replace(/[.,]0$/, ''),\n                history: histArray,\n            })\n        }\n\n        if (prevProps.chars === 0 && chars === 1) {\n            // if we are started typing a new text\n            // first character typed => counter starts\n            this.stopTimer()\n            this.startTimer()\n            this.setState({\n                chars,\n            })\n        } else if (\n            prevProps.text[pos] !== undefined &&\n            prevProps.chars !== prevProps.text[pos].length - 1 &&\n            chars === 0\n        ) {\n            // if we skipped text (pressed tab)\n            this.stopTimer()\n            this.setState({ chars })\n        } else {\n            // if we are in the middle of a text\n            this.setState({ chars })\n        }\n    }\n\n    render() {\n        let wpmspan\n        let accuarcy\n\n        const err = parseInt(this.state.errors)\n\n        const histLen = this.state.history.length\n        const wpms = map('wpm', this.state.history)\n        const errors = map('errors', this.state.history)\n        const avgWpm = defaultTo(0)(sum(wpms) / histLen)\n        const avgErrors = defaultTo(0)(sum(errors) / histLen)\n        const show = histLen > 4\n\n        if (this.state.wpm !== 0) {\n            wpmspan = <span>{this.state.wpm} wpm&nbsp;</span>\n            accuarcy = (\n                <span\n                    style={\n                        err > 96\n                            ? { color: '#48A868' }\n                            : err > 93\n                            ? { color: '#E1AD01' }\n                            : { color: 'red' }\n                    }\n                >\n                    {this.state.errors}% accuarcy\n                </span>\n            )\n        } else {\n            wpmspan = <span>&nbsp;</span>\n            accuarcy = <span>&nbsp;</span>\n        }\n\n        if (this.props.histMode) {\n            return (\n                <div style={{ color: '#A0A0A0', fontSize: '1.2em' }}>\n                    <div\n                        style={\n                            show\n                                ? {\n                                      borderTop: '1px solid #A0A0A0',\n                                      padding: 3,\n                                      width: 450,\n                                  }\n                                : {}\n                        }\n                    />\n                    {show ? ' ' + avgWpm.toFixed(0) + ' wpm and ' : ''}\n                    {show\n                        ? ' ' +\n                          avgErrors.toFixed(1).replace(/[.,]00$/, '') +\n                          '% accuarcy '\n                        : ''}\n                    {show ? ' on average over ' + histLen + ' samples' : ''}\n                </div>\n            )\n        }\n\n        return (\n            <div style={{ fontSize: '1.2em' }}>\n                {wpmspan}\n                {accuarcy}\n            </div>\n        )\n    }\n}\n\nconst matchStateToProps = state => {\n    return {\n        chars: state.typingData.charsTyped,\n        text: state.textData.text,\n        pos: state.typingData.textPosition,\n        errorPercent: state.typingData.errorPercent,\n    }\n}\n\nexport default connect(matchStateToProps)(StatsBar)\n","import * as React from 'react'\nimport * as _ from 'lodash'\nimport { defaultTo } from 'lodash/fp'\nimport { connect } from 'react-redux'\nimport {\n    changeCharsTyped,\n    changeErrorPercent,\n    changeTextPosition,\n    newText,\n} from '../actions/actions'\nimport { CHARACTER_SETS } from '../constants'\n\nconst TYPED_COLOR = '#A0A0A0'\nconst CURSOR_COLOR = '#BEBEBE'\nconst ERROR_COLOR = 'red'\nconst FONT = '\"Ubuntu Mono\", Courier, monospace'\n\nclass Typing extends React.Component {\n    state = {\n        cursorPosition: 0,\n        errorPosition: undefined,\n        errorSum: 0,\n        text: '',\n        block: false,\n    }\n\n    componentDidMount(prevProps) {\n        this.setState({ text: this.props.text })\n    }\n\n    handleDeletion(cursorPosition, errorPosition, keydown) {\n        let text = this.props.text[this.props.pos]\n        if (cursorPosition > 0) {\n            const newItems = [...this.state.text]\n            newItems.splice(cursorPosition, 1)\n            this.setState({ text: newItems.join('') })\n\n            // checks to see if we can set errorPosition to undefined\n            // if we backspaced over it\n            const setErrorPosition = (cursorPos, errPos) => {\n                this.setState({\n                    cursorPosition,\n                    errorPosition:\n                        errPos === undefined\n                            ? undefined\n                            : cursorPos > errPos\n                            ? errPos\n                            : undefined,\n                })\n            }\n\n            cursorPosition -= 1\n            setErrorPosition(cursorPosition, errorPosition)\n\n            // This is the Ctrl+Delete case\n            if (keydown.event.ctrlKey) {\n                while (\n                    !(\n                        text[cursorPosition - 1] === ' ' &&\n                        text[cursorPosition] !== ' '\n                    )\n                ) {\n                    if (cursorPosition < 1) break\n                    cursorPosition -= 1\n                    setErrorPosition(cursorPosition, errorPosition)\n                }\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            newText,\n            mode,\n            changeCharsTyped,\n            changeErrorPercent,\n            changeTextPosition,\n        } = this.props\n\n        if (this.props.text === undefined) return\n\n        let { cursorPosition, errorPosition, errorSum } = this.state\n        const { pos } = this.props\n        const { keydown } = prevProps\n        let text = this.props.text[pos]\n\n        // synchronize state with props\n        if (this.state.text !== text) {\n            this.setState({ text: text })\n        }\n\n        // reset cursor position on new text\n        if (this.props.text !== prevProps.text) {\n            this.setState({ cursorPosition: 0 })\n        }\n\n        const lang = defaultTo('en')(localStorage.getItem('language'))\n\n        while (\n            text &&\n            text[cursorPosition] &&\n            errorPosition === undefined &&\n            text[cursorPosition].match(CHARACTER_SETS[lang])\n        ) {\n            cursorPosition += 1\n            if (text[cursorPosition] === ' ') cursorPosition += 1\n            changeCharsTyped(_.defaultTo(errorPosition, cursorPosition))\n            this.setState({ cursorPosition: cursorPosition })\n        }\n\n        if (\n            prevProps.keydown.event &&\n            text !== undefined &&\n            !this.state.block\n        ) {\n            if (\n                // exclude Backspace and the like\n                (keydown.event.key.length === 1\n                    ? !keydown.event.key.match(CHARACTER_SETS[lang])\n                    : false) ||\n                keydown.event.key === 'Tab' ||\n                keydown.event.key === 'Escape'\n            ) {\n                // if a printable character was just typed\n                if (\n                    errorPosition === undefined &&\n                    text !== undefined &&\n                    keydown.event.key !== text[cursorPosition]\n                ) {\n                    // set errorPosition to cursorPosition if we typed an error without\n                    // any outstanding errors\n                    errorPosition = cursorPosition\n                    errorSum += 1\n                    changeErrorPercent(100 * (errorSum / text.length))\n                }\n\n                // print every error character\n                if (keydown.event.key !== text[cursorPosition]) {\n                    const newItems = [...this.state.text]\n                    newItems.splice(cursorPosition + 1, 0, keydown.event.key)\n                    this.setState({ text: newItems.join('') })\n                }\n\n                cursorPosition += 1\n\n                if (keydown.event.key === 'Tab') {\n                    keydown.event.preventDefault()\n                }\n\n                const maxError = _.defaultTo(\n                    localStorage.getItem('maxError'),\n                    Number.MAX_SAFE_INTEGER,\n                )\n\n                if (errorSum > maxError || keydown.event.key === 'Escape') {\n                    cursorPosition = 0\n                    errorPosition = undefined\n                    errorSum = 0\n                    changeErrorPercent(100 * (errorSum / text.length))\n                    // block typing for while after max error reached\n                    if (keydown.event.key !== 'Escape') {\n                        this.setState({ block: true })\n                        setTimeout(() => this.setState({ block: false }), 500)\n                    }\n                    keydown.event.preventDefault()\n                }\n\n                // start a new session if we reach the end with no outstanding errors\n                if (\n                    (cursorPosition === text.length &&\n                        errorPosition === undefined) ||\n                    keydown.event.key === 'Tab'\n                ) {\n                    if (\n                        this.props.text.length > pos + 1 &&\n                        keydown.event.key !== 'Tab'\n                    ) {\n                        text = this.props.text[pos]\n                        changeTextPosition(pos + 1)\n                    } else {\n                        newText(mode, this.props.text)\n                        changeTextPosition(0)\n                    }\n\n                    cursorPosition = 0\n                    errorPosition = undefined\n                    errorSum = 0\n                }\n\n                if (cursorPosition === 1) {\n                    changeErrorPercent(0)\n                }\n\n                // make sure the cursor doesn't go more than 1 past the length if we\n                // finish a session with outstanding errors\n                if (cursorPosition > text.length) {\n                    cursorPosition -= 1\n                }\n\n                this.setState({ cursorPosition, errorPosition, errorSum })\n            } else if (keydown.event.key === 'Backspace') {\n                this.handleDeletion(cursorPosition, errorPosition, keydown)\n            }\n            changeCharsTyped(_.defaultTo(errorPosition, cursorPosition))\n        }\n    }\n\n    render() {\n        const text = this.state.text\n        const { cursorPosition, errorPosition } = this.state\n        if (!text) return <div />\n        return (\n            <div style={{ fontFamily: FONT, fontSize: '1.45em' }}>\n                <mark style={{ color: TYPED_COLOR, background: '#ffffff' }}>\n                    {text.slice(\n                        0,\n                        errorPosition === undefined\n                            ? cursorPosition\n                            : errorPosition,\n                    )}\n                </mark>\n                {errorPosition !== undefined && (\n                    <mark style={{ backgroundColor: ERROR_COLOR }}>\n                        {text.slice(errorPosition, cursorPosition)}\n                    </mark>\n                )}\n                <mark style={{ backgroundColor: CURSOR_COLOR }}>\n                    {text[cursorPosition]}\n                </mark>\n                {text.slice(cursorPosition + 1, text.length)}\n            </div>\n        )\n    }\n}\n\nconst matchStateToProps = state => {\n    return {\n        text: state.textData.text,\n        mode: state.textData.mode,\n        pos: state.typingData.textPosition,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeCharsTyped: chars => {\n            dispatch(changeCharsTyped(chars))\n        },\n        changeErrorPercent: percent => {\n            dispatch(changeErrorPercent(percent))\n        },\n        changeTextPosition: pos => {\n            dispatch(changeTextPosition(pos))\n        },\n        newText: (mode, words) => {\n            dispatch(newText(mode, words))\n            dispatch(changeCharsTyped(0))\n        },\n    }\n}\n\nexport default connect(matchStateToProps, mapDispatchToProps)(Typing)\n","import * as React from 'react'\nimport { connect } from 'react-redux'\n\nclass TextInfo extends React.Component {\n    render() {\n        const { author, context } = this.props\n        return (\n            <div style={{ fontSize: '1.2em' }}>\n                -{author}\n                {context ? ', ' + context : ''}\n            </div>\n        )\n    }\n}\n\nconst matchStateToProps = state => {\n    return {\n        author: state.textData.author,\n        context: state.textData.context,\n    }\n}\n\nexport default connect(matchStateToProps)(TextInfo)\n","import * as React from 'react'\nimport keydown, { ALL_KEYS } from 'react-keydown'\nimport { connect } from 'react-redux'\n\nimport Buttons from '../components/Buttons'\nimport Settings from '../components/Settings'\nimport Stats from '../components/StatsBar'\nimport Typing from '../components/Typing'\nimport TextInfo from './TextInfo'\nimport { MODE } from '../constants'\n\n@keydown(ALL_KEYS)\nclass App extends React.Component {\n    render() {\n        const { author, keydown, mode } = this.props\n\n        if (mode === MODE.SETTINGS) {\n            return (\n                <div>\n                    <Buttons />\n                    <br />\n                    <br />\n                    <div\n                        style={{\n                            minHeight: 130,\n                            overflow: 'hidden',\n                            display: 'block',\n                        }}\n                    >\n                        <Settings />\n                    </div>\n                    <br />\n                    <br />\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <Buttons />\n                <br />\n                <Stats />\n                <br />\n                <div\n                    style={{\n                        minHeight: 130,\n                        overflow: 'hidden',\n                        display: 'block',\n                    }}\n                >\n                    <Typing keydown={keydown} />\n                    {author !== undefined && (\n                        <div>\n                            <br />\n                            <TextInfo />\n                        </div>\n                    )}\n                </div>\n                <br />\n                <Stats histMode={true} />\n                <br />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        author: state.textData.author,\n        mode: state.textData.mode,\n    }\n}\n\nexport default connect(mapStateToProps)(App)\n","import * as _ from 'lodash'\nimport { chunk, defaultTo, flatten, shuffle, pipe, map } from 'lodash/fp'\nimport { split } from 'sentence-splitter'\nimport Chance from 'chance'\nimport { MODE, NUMBERS, NEW_TEXT, RANDOM_LENGTH, SYMBOLS } from '../constants'\n\nconst chance = new Chance()\n\nconst splitter = text =>\n    split(text)\n        .map(x => (x.type === 'Sentence' ? x.raw : null))\n        .filter(Boolean)\n\nconst recombine = text =>\n    flatten(\n        chunk(2, text).map(x =>\n            x.length === 2 && x[0].length + x[1].length < 120\n                ? [x[0] + ' ' + x[1]]\n                : x,\n        ),\n    )\n\nexport const newKafka = () => {\n    const quotes = require('../static/books/kafka.json')\n    const quote = splitter(quotes.join(' ').replace('  ', ' '))\n    const combinedQuotes = recombine(quote)\n    return {\n        author: 'Franz Kafka',\n        context: 'Metamorphosis',\n        mode: MODE.QUOTE,\n        text: [_.sample(combinedQuotes)],\n    }\n}\n\nexport const newQuote = () => {\n    const lang = defaultTo('en')(localStorage.getItem('language'))\n    const quotes = require('../static/quotes/lang_' + lang + '.json')\n\n    const { author, context, text } = _.sample(quotes)\n    const combinedQuotes = recombine(splitter(text))\n    return {\n        author,\n        context,\n        mode: MODE.QUOTE,\n        text: combinedQuotes,\n    }\n}\n\nexport const newWords = () => {\n    const lang = defaultTo('en')(localStorage.getItem('language'))\n    const words = require('../static/words/' + lang + '.json')\n    const wordList = words.words.slice(0, 2800)\n\n    // Uses the New General Service List (NGSL) which covers 90% of general\n    // written english texts. The first 200 words (covering more than 50%) are\n    // weighted much higher than the remaining 2600 words.\n    const getWeightedRandomWord = () =>\n        chance.weighted(\n            wordList,\n            _.fill(Array(200), 100).concat(\n                _.fill(Array(wordList.length - 200), 1),\n            ),\n        )\n\n    const uniqWordSample = [\n        _.take(_.uniq(_.times(30, getWeightedRandomWord)), 20).join(' '),\n    ]\n\n    return {\n        mode: MODE.WORDS,\n        text: uniqWordSample,\n    }\n}\n\nexport const newWiki = playload => {\n    const { author, comments } = playload\n    return {\n        author: _.defaultTo(author, ''),\n        mode: MODE.WIKI,\n        text: _.defaultTo(comments, ''),\n    }\n}\n\nexport const newSymbols = () => {\n    const text = _.range(RANDOM_LENGTH)\n        .map(() => _.sample(SYMBOLS))\n        .join('')\n    return {\n        mode: MODE.SYMBOLS,\n        text: [text],\n    }\n}\n\nexport const newNumbers = () => {\n    const text = _.range(RANDOM_LENGTH)\n        .map(() => _.sample(NUMBERS))\n        .join('')\n    return {\n        mode: MODE.NUMBERS,\n        text: [text],\n    }\n}\n\nexport const newCustom = words => {\n    const textArr = Array.isArray(words) ? words : words.split(' ')\n    const shuffleIsSet = defaultTo('false', localStorage.getItem('shuffle'))\n\n    if (shuffleIsSet === 'false') {\n        const chunkTextArray = pipe(\n            splitter,\n            recombine,\n            map(x => chunk(60, x.split(' '))),\n            flatten,\n            map(x => x.join(' ')),\n        )(textArr.join(' '))\n\n        return {\n            mode: MODE.CUSTOM,\n            text: chunkTextArray,\n        }\n    }\n\n    const text = pipe(\n        map(i => i.split(' ')),\n        flatten,\n        chunk(RANDOM_LENGTH),\n        map(shuffle),\n        map(i => i.join(' ')),\n    )(textArr)\n\n    return {\n        mode: MODE.CUSTOM,\n        text: text,\n    }\n}\n\nexport default (state = newQuote(), action) => {\n    switch (action.type) {\n        case NEW_TEXT:\n            const mode =\n                action.payload.mode === undefined\n                    ? state.mode\n                    : action.payload.mode\n            switch (mode) {\n                case MODE.QUOTE:\n                    return newQuote()\n                case MODE.WORDS:\n                    return newWords()\n                case MODE.KAFKA:\n                    return newKafka()\n                case MODE.WIKI:\n                    return newWiki(action.payload)\n                case MODE.SYMBOLS:\n                    return newSymbols()\n                case MODE.NUMBERS:\n                    return newNumbers()\n                case MODE.SETTINGS:\n                    return { mode: MODE.SETTINGS }\n                case MODE.CUSTOM:\n                    return newCustom(action.payload.words)\n                default:\n                    return state\n            }\n        default:\n            return state\n    }\n}\n","const initialState = {\n    charsTyped: 0,\n    errorPercent: 0,\n    textPosition: 0,\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case 'CHANGE_CHARS_TYPED':\n        case 'CHANGE_TEXT_POSITION':\n        case 'CHANGE_ERROR_PERCENT':\n            return {\n                ...state,\n                ...action.payload,\n            }\n        default:\n            return state\n    }\n}\n","import { combineReducers } from 'redux'\n\nimport textData from './text'\nimport typingData from './typing'\n\nexport default combineReducers({\n    textData,\n    typingData,\n})\n","import { createStore, applyMiddleware } from 'redux'\n\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport rootReducer from './reducers'\nimport thunk from 'redux-thunk'\n\nconst composerEnhancer = composeWithDevTools({\n    name: `Redux`,\n    realtime: true,\n    trace: true,\n    traceLimit: 25\n})\n\nexport default createStore(\n    rootReducer,\n    composerEnhancer(applyMiddleware(thunk)),\n)\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport * as serviceWorker from './serviceWorker'\n\nimport App from './components/App'\nimport store from './store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'),\n)\n\nserviceWorker.register()\n"],"sourceRoot":""}